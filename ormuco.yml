- hosts: rabbitmq_server
  remote_user: "{{ user }}"
  become: yes
  vars_files:
    - variables.yml
   
  tasks: 
    - name: install default packages for docker installation
      apt:
        pkg="{{item}}" 
        state=present 
        update_cache=yes
      with_items: "{{default_packages_doker_installation}}"
    
    - name: Add an Apt signing key for docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
        
    - name: Add stable repository for docker
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
        state: present
    
    - name: Update repositories and install docker-ce package
      apt:
        name: docker-ce
        update_cache: yes
    
    - name: Install docker Python library
      pip:
        name: docker-py
        state: latest
      
    - name: Create a data container for RabbitMQ 01
      docker_container:
        name: rabbitmq 
        image: ubuntu:16.04
        hostname: rabbitmq01
        network_mode: host
        interactive: yes
        command: bash
        state: started
        etc_hosts: 
          rabbitmq01: 192.168.3.9
          rabbitmq02: 192.168.3.4
          rabbitmq03: 192.168.3.19 
      when: inventory_hostname == ansible_play_hosts[0]
    
    - name: Create a data container for RabbitMQ 02
      docker_container:
        name: rabbitmq 
        image: ubuntu:16.04
        hostname: rabbitmq02
        network_mode: host
        interactive: yes
        command: bash
        state: started
        etc_hosts: 
          rabbitmq01: 192.168.3.9
          rabbitmq02: 192.168.3.4
          rabbitmq03: 192.168.3.19 
      when: inventory_hostname == ansible_play_hosts[1]
        
    - name: Create a data container for RabbitMQ 03
      docker_container:
        name: rabbitmq 
        image: ubuntu:16.04
        hostname: rabbitmq03
        network_mode: host
        interactive: yes
        command: bash
        state: started
        etc_hosts: 
          rabbitmq01: 192.168.3.9
          rabbitmq02: 192.168.3.4
          rabbitmq03: 192.168.3.19 
      when: inventory_hostname == ansible_play_hosts[2]
      
    - name: install basic packages on containers
      command: docker exec rabbitmq /bin/bash -c "apt-get update -y; apt-get install apt-transport-https  ca-certificates curl software-properties-common wget"
      
    - name:  add a key used to sign RabbitMQ
      command: docker exec rabbitmq /bin/bash -c "wget -O - 'https://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc' | apt-key add - "
      
    - name: Add the file source for erlang
      command: docker exec rabbitmq /bin/bash -c "echo 'deb http://dl.bintray.com/rabbitmq/debian xenial erlang ' | tee /etc/apt/sources.list.d/bintray.erlang.list; apt-get update"
      
    - name: Get key for RabbitMQ
      command: docker exec rabbitmq /bin/bash -c "echo 'wget -O - 'https://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc' | apt-key add - "
      
    - name: Adding the file source file for rabbitMQ
      command: docker exec rabbitmq /bin/bash -c "echo 'deb https://dl.bintray.com/rabbitmq/debian xenial main' | tee /etc/apt/sources.list.d/bintray.rabbitmq.list;apt-get update"
      
    - name: rabbitMQ installation and stop service
      command: docker exec rabbitmq /bin/bash -c "apt-get install rabbitmq-server; service rabbitmq-server stop"     
      
    - name: set erland.cooke in all nodes
      command: docker exec rabbitmq /bin/bash -c "echo -n 'CSHTMTTZCZQXNMIOXQBA' > /var/lib/rabbitmq/.erlang.cookie; chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie; chmod 400 /var/lib/rabbitmq/.erlang.cookie; service rabbitmq-server start"         
     
    - name: join node 2 and 3 to node 1
      command: docker exec rabbitmq /bin/bash -c "rabbitmqctl stop_app ; rabbitmqctl join_cluster rabbit@rabbit01; rabbitmqctl start_app"         
      when: inventory_hostname != ansible_play_hosts[0]      
    